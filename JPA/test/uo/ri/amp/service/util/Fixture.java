/* 
 * MIT License
 * 
 * Copyright (c) 2018 Guillermo Facundo Colunga
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package uo.ri.amp.service.util;

import alb.util.date.DateUtil;
import alb.util.random.Random;
import uo.ri.business.dto.CardDto;
import uo.ri.business.dto.ClientDto;
import uo.ri.business.dto.VoucherDto;

/**
 * The Class Fixture.
 *
 * @author Guillermo Facundo Colunga
 * @version 201806081225
 */
public class Fixture {

	/**
	 * New client dto.
	 *
	 * @return the client dto
	 */
	public static ClientDto newClientDto() {
		ClientDto c = new ClientDto();
		c.dni = "123a";
		c.email = "client@workshop.com";
		c.name = "name";
		c.surname = "surname";
		c.phone = "123-456-789";
		c.addressStreet = "street";
		c.addressCity = "city";
		c.addressZipcode = "zipcode";
		return c;
	}

	/**
	 * New card dto.
	 *
	 * @param clientId the client id
	 * @return the card dto
	 */
	public static CardDto newCardDto(Long clientId) {
		CardDto card = new CardDto();
		card.clientId = clientId;
		card.cardType = "VISA";
		card.cardNumber = Random.string(16);
		card.cardExpiration = DateUtil.tomorrow();
		return card;
	}

	/**
	 * New voucher dto.
	 *
	 * @param clientId the client id
	 * @return the voucher dto
	 */
	public static VoucherDto newVoucherDto(Long clientId) {
		VoucherDto v = new VoucherDto();
		v.clientId = clientId;
		v.accumulated = 0.0;
		v.available = 100.0;
		v.description = "For testing purposes";
		// v.code = is generated by the service
		return v;
	}

}
